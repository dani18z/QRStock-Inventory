openapi: 3.1.0
info:
  title: Swagger TFG Dani & Frank
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.1 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  version: 1.0.11

servers:
  - url: http://127.0.0.1:5000
tags:
  - name: API QR
    description: Generar QR, consultar stock, y sumar y restar stock del QR.
paths:
  /generator_qr:
    get:
      tags:
        - API QR
      description: Generar c√≥digo QR para un paquete
      parameters:
        - name: name
          in: query
          description: 'Nombre del producto'
          required: true
          schema:
            type: string
        - name: size
          in: query
          description: 'Talla de la variante'
          required: true
          schema:
            type: string 
        - name: color
          in: query
          description: 'Color de la variante'
          required: true
          schema:
            type: string
        - name: stock
          in: query
          description: 'Stock a introducir'
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid input
        '422':
          description: Validation exception
        '500':
          description: Internal error service
      
  /pet/findByStatus:
    get:
      tags:
        - API QR
      summary: Finds Pets by status
      description: Multiple status values can be provided with comma separated strings
      operationId: findPetsByStatus
      parameters:
        - name: status
          in: query
          description: Status values that need to be considered for filter
          required: false
          explode: true
          schema:
            type: string
            default: available
            enum:
              - available
              - pending
              - sold
      requestBody:
        description: Create a new pet in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/qr'
        required: false
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid status value
      security:
        - petstore_auth:
            - write:pets
            - read:pets
  /pet/findByTags:
 
  /pet/{petId}:
    get:
      tags:
        - API QR
      summary: Find pet by ID
      description: Returns a single pet
      operationId: getPetById
      parameters:
        - name: petId
          in: path
          description: ID of pet to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
      security:
        - api_key: []
        - petstore_auth:
            - write:pets
            - read:pets
    post:
      tags:
        - API QR
      summary: Updates a pet in the store with form data
      description: ''
      operationId: updatePetWithForm
      parameters:
        - name: petId
          in: path
          description: ID of pet that needs to be updated
          required: true
          schema:
            type: integer
            format: int64
        - name: name
          in: query
          description: Name of pet that needs to be updated
          schema:
            type: string
        - name: status
          in: query
          description: Status of pet that needs to be updated
          schema:
            type: string
      responses:
        '400':
          description: Invalid input

components:
  schemas:
    qr:
      type: object
      properties:
        name:
          type: string
          example: CamisaMangaCorta
        size:
          type: string
          example: S
        color:
          type: string
          example: Blanco
        stock:
          type: integer
          example: 20
    